tosca_definitions_version: tosca_simple_iperf_scenario
description: Example of NSD

metadata:
  ID: dummy-NS
  vendor: Fokus
  version: 0.1

topology_template:

  node_templates:

    iperf-server: #VNF1
        type: openbaton.type.VNF.GENERIC
        properties:
          id:
          vendor: Fokus
          version: 0.1
          configurations:
            name: server-configurations
            configurationParameters:
              - key: value
              - key2: value2
          vnfPackageLocation: https://gitlab.fokus.fraunhofer.de/openbaton/scripts-test-public.git
          deployment_flavour:
            - m1.small
        requirements:
          - virtualLink: private
          - vdu: VDU2
        interfaces:
          lifecycle: # lifecycle
            create:
              - install.sh

    iperf-client:
      type: openbaton.type.VNF.GENERIC
      properties:
        ID: x
        vendor: Fokus
        version: 0.1
        vnfPackageLocation: https://gitlab.fokus.fraunhofer.de/openbaton/scripts-test-public.git
        deploymentFlavour:
          - m1.small
      requirements:
         - virtualLink: private
         - vdu: VDU1
      interfaces:
          lifecycle: # lifecycle
            INSTANCIATE:
              - install.sh
            CONFIGURE:
              - server_configure_only.sh
            START:
              - iperf_client_start.sh

    VDU1:
      type: tosca.nodes.nfv.VDU
      properties:
        vm_image:
          - ubuntu-14.04-server-cloudimg-amd64-disk1
        scale_in_out: 1
        vim_instance_name: vim-instance

    VDU2:
      type: tosca.nodes.nfv.VDU
      properties:
        vm_image:
          - ubuntu-14.04-server-cloudimg-amd64-disk1
        scale_in_out: 2
        vimInstanceName: vim-instance
      requirements:
        - virtual_link: CP2

    CP1:
      type: tosca.nodes.nfv.CP
      properties:
        floatingIP: random
      requirements:
        virtualBinding: VDU1
        virtualLink: private

    CP2: #endpoints of VNF2
      type: tosca.nodes.nfv.CP
      requirements:
        virtualBinding: VDU2
        virtualLink: private

    private:
      type: tosca.nodes.nfv.VL
      properties:
        vendor: Fokus

relationships_template:
  connection_server_client: #DO I NEED THIS AT ALL ?
    type: tosca.nodes.relationships.ConnectsTo
    source: iperf-server
    target: iperf-client
    parameters:
        - private

